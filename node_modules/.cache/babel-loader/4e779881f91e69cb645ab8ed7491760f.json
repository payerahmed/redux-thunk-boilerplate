{"ast":null,"code":"import _classCallCheck from \"/home/payer/Desktop/redux-thunk-boilerplate/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/payer/Desktop/redux-thunk-boilerplate/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/payer/Desktop/redux-thunk-boilerplate/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/payer/Desktop/redux-thunk-boilerplate/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/payer/Desktop/redux-thunk-boilerplate/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/payer/Desktop/redux-thunk-boilerplate/src/Count/CountSmart.js\";\nimport React, { Component } from \"react\";\nimport CountDumb from \"./CountDumb\";\nimport { connect } from \"react-redux\";\nimport { CountAction } from \"./CountAction\";\n\nfunction mapStateToProps(state, ownProps) {\n  console.log(\"whole srtate\", state);\n  return {\n    count: state.CountState.count\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    increaseCount: function increaseCount(count) {\n      return function () {\n        dispatch(CountAction(count));\n      };\n    }\n  };\n}\n\nvar CountSmart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CountSmart, _Component);\n\n  function CountSmart() {\n    _classCallCheck(this, CountSmart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CountSmart).apply(this, arguments));\n  }\n\n  _createClass(CountSmart, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(CountDumb, {\n        count: this.props.count,\n        handleClick: this.props.increaseCount(this.props.count),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CountSmart;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountSmart);","map":{"version":3,"sources":["/home/payer/Desktop/redux-thunk-boilerplate/src/Count/CountSmart.js"],"names":["React","Component","CountDumb","connect","CountAction","mapStateToProps","state","ownProps","console","log","count","CountState","mapDispatchToProps","dispatch","increaseCount","CountSmart","props"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,KAA5B;AACA,SAAO;AACLI,IAAAA,KAAK,EAAEJ,KAAK,CAACK,UAAN,CAAiBD;AADnB,GAAP;AAGD;;AAED,SAASE,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLC,IAAAA,aAAa,EAAE,uBAAAJ,KAAK;AAAA,aAAI,YAAM;AAC5BG,QAAAA,QAAQ,CAACT,WAAW,CAACM,KAAD,CAAZ,CAAR;AACD,OAFmB;AAAA;AADf,GAAP;AAKD;;IAEKK,U;;;;;;;;;;;;;6BACK;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWN,KADpB;AAEE,QAAA,WAAW,EAAE,KAAKM,KAAL,CAAWF,aAAX,CAAyB,KAAKE,KAAL,CAAWN,KAApC,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAQD;;;;EAVsBT,S;;AAazB,eAAeE,OAAO,CACpBE,eADoB,EAEpBO,kBAFoB,CAAP,CAGbG,UAHa,CAAf","sourcesContent":["import React, { Component } from \"react\"\nimport CountDumb from \"./CountDumb\"\nimport { connect } from \"react-redux\"\nimport { CountAction } from \"./CountAction\"\n\nfunction mapStateToProps(state, ownProps) {\n  console.log(\"whole srtate\", state)\n  return {\n    count: state.CountState.count\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    increaseCount: count => () => {\n      dispatch(CountAction(count))\n    }\n  }\n}\n\nclass CountSmart extends Component {\n  render() {\n    return (\n      <div>\n        <CountDumb\n          count={this.props.count}\n          handleClick={this.props.increaseCount(this.props.count)}\n        />\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CountSmart)\n"]},"metadata":{},"sourceType":"module"}